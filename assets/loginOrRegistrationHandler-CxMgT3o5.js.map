{"version":3,"file":"loginOrRegistrationHandler-CxMgT3o5.js","sources":["../../src/ts/pages/sign-in/login/createMarkup.ts","../../src/ts/utils/toggleVisiblePassword.ts","../../src/ts/pages/sign-in/login/loginThroughGoogle.ts","../../src/ts/pages/sign-in/login/loginThroughProvider.ts","../../src/ts/utils/validateForm.ts","../../src/ts/pages/sign-in/login/handlerLogin.ts","../../src/ts/pages/sign-in/registration/createMarkup.ts","../../src/ts/pages/sign-in/registration/registerUser.ts","../../src/ts/pages/sign-in/registration/handlerRegistration.ts","../../src/ts/pages/sign-in/loginOrRegistrationHandler.ts"],"sourcesContent":["export function markup(): string {\n  return `\n        <div class=\"sign-in__form-input__wrapper\">\n          <div class=\"sign-in__form-input-box\">\n            <input\n              id=\"email\"\n              type=\"email\"\n              class=\"sign-in__form-input js-login-email\"\n              placeholder=\"Електронна пошта\"\n              required />\n          </div>\n\n          <div class=\"sign-in__form-input-box\">\n            <input\n              id=\"password\"\n              type=\"password\"\n              class=\"sign-in__form-input js-form-input-password js-login-password\"\n              placeholder=\"Пароль\"\n              required />\n\n            <div class=\"sign-in__form-input-icon-box\">\n              <svg\n                width=\"24\"\n                height=\"24\"\n                class=\"sign-in__form-input-icon js-form-input-icon-view\">\n                <use xlink:href=\"#icon-eye-views\"></use>\n              </svg>\n              <span class=\"sign-in__form-input-icon-line js-icon-line-cross-out\"></span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"sign-in__form-restore\">\n          <a\n            href=\"#\"\n            class=\"sign-in__form-forgot-password-link\">\n            Забули пароль?\n          </a>\n          <a\n            href=\"#\"\n            class=\"sign-in__form-restore-link\">\n            Відновити\n          </a>\n        </div>\n\n        <button\n          class=\"sign-in__form-btn-submit\"\n          type=\"submit\">\n          Увійти\n        </button>\n\n        <div class=\"sign-in__log-in-via-title-box\">\n          <p class=\"sign-in__log-in-via-title\">Або увійдіть через</p>\n        </div>\n\n        <ul class=\"sign-in__log-in-via-list js-login-provider-list\">\n          <li class=\"sign-in__log-in-via-item\">\n            <svg\n              width=\"44\"\n              height=\"44\"\n              class=\"sign-in__log-in-via-icon\">\n              <use xlink:href=\"#icon-form_steam\"></use>\n            </svg>\n          </li>\n\n          <li class=\"sign-in__log-in-via-item\">\n            <svg\n              width=\"44\"\n              height=\"44\"\n              class=\"sign-in__log-in-via-icon\">\n              <use xlink:href=\"#icon-form-apple\"></use>\n            </svg>\n          </li>\n\n          <li class=\"sign-in__log-in-via-item js-form-item-google\">\n            <svg\n              width=\"44\"\n              height=\"44\"\n              class=\"sign-in__log-in-via-icon\">\n              <use xlink:href=\"#icon-form_google\"></use>\n            </svg>\n          </li>\n\n          <li class=\"sign-in__log-in-via-item js-form-item-facebook\">\n            <svg\n              width=\"44\"\n              height=\"44\"\n              class=\"sign-in__log-in-via-icon\">\n              <use xlink:href=\"#icon-form-facebook\"></use>\n            </svg>\n          </li>\n        </ul>`;\n}\n","export function toggleVisiblePassword(form: HTMLFormElement): void {\n  const btnReview = form.querySelector('.js-form-input-icon-view');\n\n  btnReview?.addEventListener('click', () => {\n    const passwordInput = form.querySelector('.js-form-input-password') as HTMLInputElement;\n    const lineCrossOut = form.querySelector('.js-icon-line-cross-out') as HTMLElement;\n\n    if (passwordInput.type === 'password') {\n      passwordInput.type = 'text';\n      lineCrossOut.style.display = 'none';\n      return;\n    }\n\n    passwordInput.type = 'password';\n    lineCrossOut.style.display = 'inline-block';\n  });\n}\n","import { signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { auth } from '@/ts/utils/firebaseConfig';\nimport { handleError } from '@/ts/utils/handleError';\n\nexport function loginThroughGoogle() {\n  const provider = new GoogleAuthProvider();\n\n  signInWithPopup(auth, provider)\n    .then(result => {\n      const user = result.user;\n      console.log('User signed in with Google:', user);\n\n      window.location.href =\n        window.location.hostname === 'localhost' ? '/cabinet' : '/battle-star/cabinet';\n      localStorage.setItem('logged', 'true');\n    })\n    .catch(handleError);\n}\n","import { loginThroughGoogle } from './loginThroughGoogle';\n\nexport function loginThroughProvider(form: HTMLFormElement) {\n  const providerList = form.querySelector('.js-login-provider-list');\n\n  providerList?.addEventListener('click', (e: Event) => {\n    const targetEl = (e.target as HTMLElement).closest('li');\n\n    if (targetEl?.classList.contains('js-form-item-google')) {\n      loginThroughGoogle();\n    }\n  });\n}\n","import JustValidate from 'just-validate';\n\nexport function validateForm(form: HTMLFormElement) {\n  const emailEl = form.querySelector('#email') as HTMLInputElement;\n  const passwordEl = form.querySelector('#password') as HTMLInputElement;\n  const namedEl = form.querySelector('#name') as HTMLInputElement;\n\n  const validate: any = new JustValidate(form);\n\n  validate.addField(emailEl, [\n    { rule: 'required', errorMessage: 'Email is required.' },\n    { rule: 'email', errorMessage: 'Email is invalid!' },\n  ]);\n\n  validate.addField(passwordEl, [\n    { rule: 'required', errorMessage: 'Password is required.' },\n    { rule: 'password', errorMessage: 'Password must be strong.' },\n  ]);\n\n  if (namedEl) {\n    validate.addField(namedEl, [\n      { rule: 'required', errorMessage: 'Name is required.' },\n      { rule: 'minLength', value: 2, errorMessage: 'Name must be between 2 and 30 characters.' },\n      { rule: 'maxLength', value: 30, errorMessage: 'Name must be between 2 and 30 characters.' },\n    ]);\n  }\n}\n","import { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '@/ts/utils/firebaseConfig';\nimport { markup } from './createMarkup';\nimport { toggleVisiblePassword } from '@/ts/utils/toggleVisiblePassword';\nimport { loginThroughProvider } from './loginThroughProvider';\nimport 'toastr/build/toastr.min.css';\nimport { validateForm } from '@/ts/utils/validateForm';\nimport { handleError } from '@/ts/utils/handleError';\n\nexport function handlerLogin(form: HTMLFormElement) {\n  // create-markup\n  form.innerHTML = markup();\n  // handler-login\n  form.addEventListener('submit', (e: Event) => {\n    e.preventDefault();\n    let emailEl = document.querySelector('.js-login-email') as HTMLInputElement;\n    if (!emailEl) return;\n    const email = emailEl.value;\n    const password = (document.querySelector('.js-login-password') as HTMLInputElement).value;\n\n    signInWithEmailAndPassword(auth, email, password)\n      .then(userCredential => {\n        // const user = userCredential.user;\n        window.location.href = '/cabinet';\n        localStorage.setItem('logged', 'true');\n        form.reset();\n      })\n      .catch(handleError);\n  });\n\n  // login-through-provider\n  loginThroughProvider(form);\n  // toggle-visible-password\n  toggleVisiblePassword(form);\n  //  validate-form\n  validateForm(form);\n}\n","export function markup(): string {\n  return `\n        <div class=\"sign-in__form-input-box\">\n          <input\n            id=\"name\"\n            type=\"text\"\n            class=\"sign-in__form-input js-input-nickname\"\n            placeholder=\"Введіть нікнейм\"\n            pattern=\"^[a-zA-Zа-яА-ЯїЇєЄіІ]{2,15}$\"\n            required />\n        </div>\n\n        <div class=\"sign-in__form-input-box\">\n          <input\n            id=\"email\"\n            type=\"email\"\n            class=\"sign-in__form-input js-form-input-email\"\n            placeholder=\"Електронна пошта\"\n            required />\n        </div>\n\n        <div class=\"sign-in__form-input-box\">\n          <input\n            id=\"password\"\n            type=\"password\"\n            class=\"sign-in__form-input js-form-input-password\"\n            placeholder=\"Придумайте пароль\"\n            required />\n\n          <div class=\"sign-in__form-input-icon-box\">\n            <svg\n              width=\"24\"\n              height=\"24\"\n              class=\"sign-in__form-input-icon js-form-input-icon-view\">\n              <use xlink:href=\"#icon-eye-views\"></use>\n            </svg>\n            <span class=\"sign-in__form-input-icon-line js-icon-line-cross-out\"></span>\n          </div>\n        </div>\n\n        <button\n          class=\"sign-in__form-btn-submit sign-in__form-btn-submit_create\"\n          type=\"submit\">\n          Створити\n        </button>`;\n}\n","import { createUserWithEmailAndPassword, updateProfile, User } from 'firebase/auth';\nimport { auth } from '@/ts/utils/firebaseConfig';\nimport { handleError } from '@/ts/utils/handleError';\n\nexport async function registerUser(\n  email: string,\n  password: string,\n  nickname: string\n): Promise<User | void> {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    const user = userCredential.user;\n    await updateProfile(user, { displayName: nickname });\n\n    window.location.href = '/cabinet';\n    localStorage.setItem('logged', 'true');\n    return user;\n  } catch (error) {\n    handleError(error);\n  }\n}\n","import { markup } from './createMarkup';\nimport { toggleVisiblePassword } from '@/ts/utils/toggleVisiblePassword';\nimport { registerUser } from './registerUser';\nimport { validateForm } from '@/ts/utils/validateForm';\nimport { handleError } from '@/ts/utils/handleError';\n\nexport function handlerRegistration(form: HTMLFormElement): void {\n  // markup\n  form.innerHTML = markup();\n\n  // handlerForm\n  form.addEventListener('submit', (e: Event) => {\n    e.preventDefault();\n\n    let emailEl = document.querySelector('.js-form-input-email') as HTMLInputElement;\n    if (!emailEl) return;\n    const email = emailEl.value.trim();\n    const password = (document.querySelector('.js-form-input-password') as HTMLInputElement).value;\n    const nickname = (\n      document.querySelector('.js-input-nickname') as HTMLInputElement\n    ).value.trim();\n\n    registerUser(email, password, nickname)\n      .then(user => {\n        if (!user) return;\n\n        form.reset();\n      })\n      .catch(handleError);\n  });\n\n  // toggleVisiblePassword\n  toggleVisiblePassword(form);\n  // validateForm\n  validateForm(form);\n}\n","import { handlerLogin } from './login/handlerLogin';\nimport { handlerRegistration } from './registration/handlerRegistration';\n\nexport function signInOrSignUpHandler(): void {\n  const signIn = document.querySelector('.js-form-btn-enter');\n  const signUp = document.querySelector('.js-form-btn-create');\n  const tumbBtns = document.querySelector('.js-form-btns-tumb');\n  const form = document.querySelector('.js-sign-in-form');\n  // --local-refs---\n\n  // signIn\n  signIn?.addEventListener('click', handlerSignIn);\n\n  function handlerSignIn(): void {\n    signIn?.classList.add('active-btn');\n    signUp?.classList.remove('active-btn');\n    tumbBtns?.classList.remove('sign-in__form-btns-tumb_active');\n\n    // handlerLogin\n    if (form instanceof HTMLFormElement) {\n      handlerLogin(form);\n    }\n  }\n  handlerSignIn();\n\n  // signUp\n  signUp?.addEventListener('click', handlersignUp);\n\n  function handlersignUp(): void {\n    signUp?.classList.add('active-btn');\n    signIn?.classList.remove('active-btn');\n    tumbBtns?.classList.add('sign-in__form-btns-tumb_active');\n\n    // handlerRegistration\n    if (form instanceof HTMLFormElement) {\n      handlerRegistration(form);\n    }\n  }\n}\n"],"names":["markup","toggleVisiblePassword","form","btnReview","passwordInput","lineCrossOut","loginThroughGoogle","provider","GoogleAuthProvider","signInWithPopup","auth","result","user","handleError","loginThroughProvider","providerList","e","targetEl","validateForm","emailEl","passwordEl","namedEl","validate","JustValidate","handlerLogin","email","password","signInWithEmailAndPassword","userCredential","registerUser","nickname","createUserWithEmailAndPassword","updateProfile","error","handlerRegistration","signInOrSignUpHandler","signIn","signUp","tumbBtns","handlerSignIn","handlersignUp"],"mappings":"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"}